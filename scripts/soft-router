#!/bin/bash

# session store file
SESSION_FILE=~/.soft-router/session.dat
touch $SESSION_FILE

readsession() {
	if [ -f $SESSION_FILE -a -n "$1" ]; then
		cat $SESSION_FILE | grep ^$1= | cut -f 2 -d =
	fi
}

savesession() {
	if [ -f $SESSION_FILE -a -n "$1" -a -n "$2" ]; then
		if [ -n "`cat $SESSION_FILE | grep ^$1=`" ]; then
			sed -i '/^'$1'=/d' $SESSION_FILE
		fi
	echo "$1=$2" >> $SESSION_FILE
	fi
}

deletesession() {
	if [ -f $SESSION_FILE -a -n "$1" ]; then
		if [ -n "`cat $SESSION_FILE | grep ^$1=`" ]; then
			sed -i '/^'$1'=/d' $SESSION_FILE
		fi
	fi
}

check() {
	echo -n "> Checking $1 ... "
	if [ -n "`which $1`" ]; then
		echo "OK"
	else
		echo "Not found"
		exit 1
	fi
}

subargs() {
	idx=$1
	let "idx+=1"
	echo $@ | cut -f "$idx"- -d " "
}

getwlanif() {
	if [ -e /etc/init.d/hostapd ];then
		# find hostapd.conf
		HOSTAPD_CONF=`cat /etc/init.d/hostapd | grep DAEMON_CONF= | cut -f2 -d =`
		if [ -f $HOSTAPD_CONF ]; then
			# find wlan interface name
			echo `cat $HOSTAPD_CONF | grep interface= | cut -f2 -d =`
		fi
	fi
}

stopwpasupplicant() {
	# find wlan interface name
	WLAN_IF=`getwlanif`
	if [ -n "$WLAN_IF" ]; then
		# find pid of wpa_supplicant of this interface
		WPA_PID=`wpa_supplicant_pid.sh $WLAN_IF`
		if [ -n "$WPA_PID" ]; then
			# kill wpa_supplicant
			kill $WPA_PID > /dev/null 2>&1
		fi
	fi
}

stopservice() {
	# stop service using 'service xxx stop' first
	`service $1 stop`
	PID=`pidof $1`
	# check status again
	if [ -n "$PID" ]; then
		kill $PID > /dev/null 2>&1
	fi
}

delbridge() {
	ifconfig $1 down > /dev/null 2>&1
	brctl delbr $1 > /dev/null 2>&1
}

createbridge() {
	`brctl addbr $BR_NAME`
	ifconfig $BR_NAME $BR_ADDR netmask 255.255.255.0 up
	if [ -n "$LAN" ]; then
		OLD_IFS="$IFS"
		IFS=" "
		arr=($LAN)
		IFS="$OLD_IFS"
		for s in ${arr[@]}
		do
			brctl addif $BR_NAME $s
		done
	fi
}

setnatforward() {
	rule="POSTROUTING -s ${BR_ADDR%1}0/24 -o $OUTER_IF -j MASQUERADE"
	iptables -t nat -A $rule
	`savesession nat_rule "$rule"`
}

clearnatforward() {
	rule=`readsession nat_rule`
	if [ -n "$rule" ]; then
		iptables -t nat -D $rule
		`deletesession nat_rule`
	fi
	iptables -t nat -D POSTROUTING -s ${BR_ADDR%1}0/24 -o $OUTER_IF -j MASQUERADE
}

checkdepedence() {
	check brctl
	check dnsmasq
	check iptables
}

routerstart() {
	echo "> starting ..."

	if [ -n "$ENABLE_HOSTAPD" ]; then
		# stop exist process
		echo "> stopping old process ..."
		stopservice hostapd
		# stop wpasupplicant which is using wlan interface
		stopwpasupplicant
	fi

	# create bridge
	echo "> creating bridge ..."
	delbridge $BR_NAME
	createbridge
	if [ -n "$ENABLE_HOSTAPD" ]; then
		# start hostapd
		echo "> starting hostapd ..."
		service hostapd start
	fi
	# add wlan interface to bridge
	echo "> setting iptables forward ..."
	WLAN_IF=`getwlanif`
	if [ -n "$WLAN_IF" ]; then
		brctl addif $BR_NAME $WLAN_IF
	fi
	# configure nat forward
	echo 1 > /proc/sys/net/ipv4/ip_forward
	setnatforward

	# show status
	routerstatus
}

routerstop() {
	echo "> stopping ..."
	# stop nat forward
	echo "> stopping iptables forward ..."
	clearnatforward
	# delete bridge
	echo "> deleting bridge ..."
	delbridge $BR_NAME
	if [ -n "$ENABLE_HOSTAPD" ]; then
		# stop hostapd
		echo "> stopping hostapd ..."
		stopservice hostapd
	fi

	echo "> OK"
}

routerstatus() {
	HOSTAPD_PID=`pidof hostapd`
	if [ -n "$HOSTAPD_PID" ]; then
		echo "> hostapd is running at pid: $HOSTAPD_PID"
	fi
}


# interface connected to internet
OUTER_IF="eth0"
# bridge name
BR_NAME="br-lan"
# address of bridge
BR_ADDR="192.168.8.1"

source ~/.soft-router/soft-router.conf


case $1 in

check)
checkdepedence
;;

start)
routerstart
;;

stop)
routerstop
;;

status)
routerstatus
;;

restart|reload)
routerstop
routerstart
;;

*)
echo "Soft router script V1.0   @by Loy B. <lonord@qq.com> (github.com/lonord)"
echo ""
echo "Usage: soft-router <command> [action]"
echo "       soft-router check     check depedences"
echo "       soft-router start     start router"
echo "       soft-router stop      stop router"
echo "       soft-router status    show router status"
echo "       soft-router restart   restart router"
echo ""
;;

esac
